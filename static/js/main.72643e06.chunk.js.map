{"version":3,"sources":["pages/Weather/components/ForecastList/ForecastList.module.css","shared/components/Button/Button.module.css","shared/components/Card/Card.module.css","pages/Weather/Weather.module.css","pages/Weather/components/ForecastCard/ForecastCard.module.css","shared/components/Error/Error.module.css","shared/components/Button/Button.js","shared/components/Card/Card.js","shared/components/Error/Error.js","shared/components/Header/Header.js","shared/components/Loader/Loader.js","shared/components/Switch/Switch.js","shared/utils/temperatureConverter.js","pages/Weather/components/ForecastCardField/ForecastCardField.js","pages/Weather/components/ForecastCard/ForecastCard.js","pages/Weather/components/ForecastList/useForecastList.js","pages/Weather/components/ForecastList/ForecastList.js","pages/Weather/components/ForecastChartAxisLabel/ForecastChartAxisLabel.js","pages/Weather/components/ForecastChart/ForecastChart.js","pages/Weather/Weather.util.js","pages/Weather/Weather.slice.js","shared/utils/request.js","pages/Weather/useWeather.js","pages/Weather/Weather.apis.js","pages/Weather/Weather.js","useFlashScreen.js","App.js","store/store.js","index.js","shared/components/Header/Header.module.css","shared/components/Loader/Loader.module.css","shared/components/Switch/Switch.module.css","pages/Weather/components/ForecastChart/ForecastChart.module.css"],"names":["module","exports","variantTypes","invert","danger","Button","children","onClick","variant","customStyles","type","disabled","className","styles","button","defaultProps","Card","refEl","ref","card","Error","message","error","error__icon","error__text","Header","header","container","header__title","Loader","loader","loader__spinner","loader__text","Switch","onChange","checked","switch","switch__input","switch__circle","temperatureConverter","tempInCelsius","isCelsius","Math","round","ForecastCardField","label","value","card__field","card__field__label","card__field__value","ForecastCard","data","isActive","onCardClick","gsap","registerPlugin","CSSPlugin","cardEl","useRef","useEffect","TimelineMax","fromTo","current","x","alpha","duration","active","Fragment","moment","date","format","avg_temp","useForecastList","list","setActiveForecastDate","useState","setData","currentPage","setCurrentPage","pageSize","totalPages","setTotalPages","ceil","length","getPageData","endIndex","startIndex","slice","onPrevPage","onNextPage","ForecastList","activeForecastDate","setIsCelsius","city","forecast","forecast__header","forecast__title","forecast__buttonGroup","forecast__switch","forecast__switch__label","forecast__button","forecast__buttonPrev","forecast__buttonNext","forecast__cards","map","key","ForecastChartAxisLabel","style","XAxisStyle","transform","YAxisStyle","ForecastChart","forecastDate","wrapper","title","chartContainer","width","height","margin","top","right","left","bottom","dataKey","labelStyle","display","wrapperStyle","background","padding","fontSize","borderRadius","content","payload","fill","maxBarSize","radius","groupWeatherByDate","reduce","acc","item","dt_txt","split","push","getAverageTemperature","day","main","temp","getWeatherList","info","getChartData","time","substr","indexOf","weatherSelector","state","weather","isLoading","cityInfo","forecastList","forecastByDate","weatherSlice","createSlice","name","initialState","reducers","fetchWeatherDataSuccess","action","setError","actions","request","a","url","params","axios","get","useWeather","useSelector","dispatch","useDispatch","setTimeout","APPID","q","cnt","units","response","Weather","useFlashScreen","showFlashScreen","setFlashScreen","document","getElementById","App","configureStore","reducer","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.72643e06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"ForecastList_forecast__39bfI\",\"forecast__header\":\"ForecastList_forecast__header__3Haar\",\"forecast__title\":\"ForecastList_forecast__title__1yMDN\",\"forecast__switch\":\"ForecastList_forecast__switch__1UF_q\",\"forecast__switch__label\":\"ForecastList_forecast__switch__label__1KC0V\",\"forecast__buttonGroup\":\"ForecastList_forecast__buttonGroup__34Xt0\",\"forecast__button\":\"ForecastList_forecast__button__3HTUd\",\"forecast__buttonPrev\":\"ForecastList_forecast__buttonPrev__3Fcos\",\"forecast__buttonNext\":\"ForecastList_forecast__buttonNext__2M3-k\",\"forecast__cards\":\"ForecastList_forecast__cards__2zSn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3ORSg\",\"invert\":\"Button_invert__18Yym\",\"danger\":\"Button_danger__2CiQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2mtgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Weather_content__mP902\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ForecastCard_card__8Dqgd\",\"active\":\"ForecastCard_active__121jB\",\"card__field\":\"ForecastCard_card__field__2z3hU\",\"card__field__label\":\"ForecastCard_card__field__label__N4Y52\",\"card__field__value\":\"ForecastCard_card__field__value__rPDvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__iMbjl\",\"error__icon\":\"Error_error__icon__30dCN\",\"error__text\":\"Error_error__text__vxOFa\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Button.module.css\";\n\nexport const variantTypes = {\n    invert: \"invert\",\n    danger: \"danger\",\n}\n\nconst Button = ({ children, onClick, variant, customStyles = {}, type, disabled }) => (\n    <button\n        className={`\n            ${styles.button}\n            ${customStyles.button}\n            ${variantTypes[variant] ? [styles[variantTypes[variant]]] : \"\"}\n        `}\n        type={type}\n        onClick={onClick}\n        disabled={disabled}\n    >{children}</button>\n);\n\nButton.propTypes = {\n    children: PropTypes.node.isRequired,\n    onClick: PropTypes.func,\n    variantTypes: PropTypes.oneOf([\"\", \"invert\", \"danger\"]), // from variantTypes\n    customStyles: PropTypes.object,\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n    children: \"\",\n    onClick: () => {},\n    variantTypes: \"\", // from variantTypes\n    customStyles: {},\n    type: \"button\",\n    disabled: false\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Card.module.css\";\n\nconst Card = ({ children, customStyles, onClick, refEl }) => (\n    <div\n        ref={refEl}\n        className={`${styles.card} ${customStyles.card}`}\n        onClick={onClick}\n    >{children}</div>\n)\n\nCard.propTypes = {\n    children: PropTypes.element.isRequired,\n    customStyles: PropTypes.shape({\n        card: PropTypes.string\n    }),\n    onClick: PropTypes.func,\n}\n\nCard.defaultProps = {\n    children: \"\",\n    customStyles: {\n        card: \"\"\n    },\n    onClick: () => {}\n}\n\nexport default Card;\n","import React from \"react\";\nimport styles from \"./Error.module.css\";\n\nconst Error = ({message}) => (\n    <div className={styles.error}>\n        <span className={styles.error__icon} />\n        <span className={styles.error__text}>OOPS..! Something went wrong, try refreshing the page.</span>\n        <span className={styles.error__text}>Error message: {message}</span>\n    </div>\n)\n\nexport default Error;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\nconst Header = () => (\n    <header className={styles.header}>\n        <div className={styles.container}>\n            <h1 className={styles.header__title}>Weather</h1>\n        </div>\n    </header>\n)\n\nHeader.propTypes = {}\n\nHeader.defaultProps = {}\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => (\n    <div className={styles.loader}>\n        <div className={styles.loader__spinner} />\n        <span className={styles.loader__text}>Loading...</span>\n    </div>\n);\n\nLoader.propTypes = {\n\n}\n\nLoader.defaultProps = {\n\n}\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Switch.module.css\";\n\nconst Switch = ({ onChange, checked, customStyles }) => (\n    <label\n        className={`\n            ${styles.switch}\n            ${customStyles.switch}\n        `}\n    >\n        <input\n            type=\"checkbox\"\n            className={`\n                ${styles.switch__input}\n                ${customStyles.switch__input}\n            `}\n            onChange={onChange}\n            checked={checked}\n        />\n        <span className={`${styles.switch__circle} ${customStyles.switch__circle}`} />\n    </label>\n)\n\nSwitch.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    customStyles: PropTypes.shape({\n        switch: PropTypes.string,\n        switch__circle: PropTypes.string,\n        switch__input: PropTypes.string,\n    }),\n}\n\nSwitch.defaultProps = {\n    onChange: () => {},\n    checked: false,\n    customStyles: {\n        switch: \"\",\n        switch__circle: \"\",\n        switch__input: \"\",\n    },\n}\n\nexport default Switch;\n","/**\n * Functions returns celsius or converts celsius to fahrenheit based on boolean state\n *\n * @param {number} tempInCelsius - temperature in celsius\n * @param {boolean} isCelsius\n *\n * @returns {number} - temperature in fahrenheit or celsius\n */\n\nconst temperatureConverter = (tempInCelsius, isCelsius) => {\n    if (!isCelsius) {\n        return Math.round((tempInCelsius * (9 / 5)) + 32);\n    }\n    return Math.round(tempInCelsius);\n}\n\nexport default temperatureConverter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../ForecastCard/ForecastCard.module.css\";\n\nconst ForecastCardField = ({ label, value }) => (\n    <div className={styles.card__field}>\n        <span className={styles.card__field__label}>{label}</span>\n        <span className={styles.card__field__value}>{value}</span>\n    </div>\n)\n\nForecastCardField.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n}\n\nForecastCardField.defaultProps = {\n    label: \"\",\n    value: \"\"\n}\n\nexport default ForecastCardField;\n","import React, {useEffect, useRef} from \"react\";\nimport gsap, { TimelineMax } from \"gsap\";\nimport { CSSPlugin } from 'gsap/CSSPlugin';\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport {Card} from \"../../../../shared/components\";\nimport styles from \"./ForecastCard.module.css\";\nimport temperatureConverter from \"../../../../shared/utils/temperatureConverter\";\nimport ForecastCardField from \"../ForecastCardField/ForecastCardField\";\n\nconst ForecastCard = ({ data, isActive, onCardClick, isCelsius }) => {\n    gsap.registerPlugin(CSSPlugin);\n    const cardEl = useRef(null);\n\n    useEffect(() => {\n        const tween = new TimelineMax();\n        tween.fromTo(cardEl.current, { x: 35, alpha: 0 }, { x: 0, alpha: 1, duration: 0.45 });\n    }, [])\n\n    return (\n        <Card refEl={cardEl} customStyles={{ card: `${styles.card} ${isActive ? styles.active: \"\"}`}} onClick={onCardClick}>\n            <React.Fragment>\n                <ForecastCardField\n                    label=\"Date: \"\n                    value={moment(data.date).format(\"Do MMM YY\")}\n                />\n                <ForecastCardField\n                    label=\"Temp: \"\n                    value={`${temperatureConverter(data.avg_temp, isCelsius)} ${isCelsius ? \" ºC\" : \" ºF\"}`}\n                />\n            </React.Fragment>\n        </Card>\n    );\n}\n\nForecastCard.propTypes = {\n    data: PropTypes.object.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    onCardClick: PropTypes.func.isRequired,\n    isCelsius: PropTypes.bool.isRequired,\n}\n\nForecastCard.defaultProps = {\n    data: {},\n    isActive: false,\n    isCelsius: false,\n    onCardClick: () => {},\n}\n\nexport default ForecastCard;\n","import {useEffect, useState} from \"react\";\n\nconst useForecastList = (list, setActiveForecastDate) => {\n    const [data, setData] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize] = useState(3);\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(() => {\n        setData(list);\n        setTotalPages(Math.ceil(list.length / pageSize));\n        setActiveForecastDate(list[0].date);\n    }, [list]);\n\n    const getPageData = () => {\n        const endIndex = currentPage * pageSize;\n        const startIndex = endIndex - pageSize;\n        return data.slice(startIndex, endIndex);\n    }\n\n    const onPrevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    const onNextPage = () => {\n        if (totalPages > currentPage) {\n            setCurrentPage(currentPage + 1);\n        }\n    }\n\n    return {\n        getPageData,\n        onPrevPage,\n        onNextPage,\n        totalPages,\n        currentPage,\n    }\n}\n\nexport default useForecastList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ForecastCard from \"../ForecastCard/ForecastCard\";\nimport styles from \"./ForecastList.module.css\";\nimport {Button, Switch} from \"../../../../shared/components\";\nimport useForecastList from \"./useForecastList\";\n\nconst ForecastList = ({ list, activeForecastDate, setActiveForecastDate, isCelsius, setIsCelsius, city }) => {\n    const {\n        getPageData,\n        onPrevPage,\n        onNextPage,\n        totalPages,\n        currentPage,\n    } = useForecastList(list, setActiveForecastDate)\n\n    return (\n        <div className={styles.forecast}>\n            <div className={styles.forecast__header}>\n                <h2 className={styles.forecast__title}>{city}</h2>\n                <div className={styles.forecast__buttonGroup}>\n                    <label className={styles.forecast__switch}>\n                        <span className={styles.forecast__switch__label}>ºF</span>\n                        <Switch\n                            checked={isCelsius}\n                            onChange={setIsCelsius}\n                        />\n                        <span className={styles.forecast__switch__label}>ºC</span>\n                    </label>\n                    <Button\n                        onClick={() => onPrevPage()}\n                        disabled={!(currentPage > 1)}\n                        customStyles={{\n                            button: `${styles.forecast__button}\n                            ${styles.forecast__buttonPrev}`,\n                        }}\n                    />\n                    <Button\n                        onClick={() => onNextPage()}\n                        disabled={!(totalPages > currentPage)}\n                        customStyles={{\n                            button: `${styles.forecast__button}\n                            ${styles.forecast__buttonNext}`,\n                        }}\n                    />\n                </div>\n            </div>\n            <div className={styles.forecast__cards}>\n                {getPageData().map(data => <ForecastCard\n                    key={data.date}\n                    data={data}\n                    isCelsius={isCelsius}\n                    isActive={data.date === activeForecastDate}\n                    onCardClick={() => setActiveForecastDate(data.date)}\n                />)}\n            </div>\n        </div>\n    )\n}\n\nForecastList.propTypes = {\n    city: PropTypes.string.isRequired,\n    list: PropTypes.array.isRequired,\n    activeForecastDate: PropTypes.string,\n    isCelsius: PropTypes.bool.isRequired,\n    setActiveForecastDate: PropTypes.func.isRequired,\n    setIsCelsius: PropTypes.func.isRequired,\n}\n\nForecastList.defaultProps = {\n    city: \"\",\n    list: [],\n    activeForecastDate: \"\",\n    isCelsius: false,\n    setActiveForecastDate: () => {},\n    setIsCelsius: () => {},\n}\n\nexport default ForecastList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ForecastChartAxisLabel = ({ style, label }) => (\n    <g style={style}>\n        <text>{label}</text>\n    </g>\n)\n\nForecastChartAxisLabel.propTypes = {\n    label: PropTypes.string.isRequired,\n    style: PropTypes.object,\n}\n\nForecastChartAxisLabel.defaultProps = {\n    label: \"\",\n    style: {},\n}\n\nexport default ForecastChartAxisLabel;\n","import React from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport {BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer} from \"recharts\";\nimport ForecastChartAxisLabel from \"../ForecastChartAxisLabel/ForecastChartAxisLabel\";\nimport styles from \"./ForecastChart.module.css\";\n\nconst XAxisStyle = { transform: \"translate(50%, 100%)\" };\nconst YAxisStyle = { transform: \"rotateX(0deg) rotateY(0deg) rotateZ(-90deg) translate(-122px, 12px)\" };\n\nconst ForecastChart = ({ data, forecastDate, isCelsius }) => (\n    <div className={styles.wrapper}>\n        <h2 className={styles.title}>{moment(forecastDate).format(\"Do MMMM\")}</h2>\n        <div className={styles.chartContainer}>\n            <ResponsiveContainer width=\"100%\" height={200}>\n                <BarChart\n                    data={data}\n                    margin={{ top: 0, right: 0, left: -12, bottom: 8 }}\n                >\n                    <XAxis\n                        dataKey=\"time\"\n                        label={<ForecastChartAxisLabel label=\"Time\" style={XAxisStyle} />}\n                    />\n                    <YAxis\n                        label={<ForecastChartAxisLabel label=\"Temperature\" style={YAxisStyle} />}\n                    />\n                    <Tooltip\n                        labelStyle={{display: \"none\"}}\n                        wrapperStyle={{\n                            background: \"#fff\",\n                            padding: \"8px 16px\",\n                            fontSize: \"18px\",\n                            borderRadius: \"2px\",\n                        }}\n                        content={({payload}) => {\n                            if(payload.length) {\n                                return `${payload[0].value} ${isCelsius ? \" ºC\" : \" ºF\"}`;\n                        }}}\n                    />\n                    <Bar\n                        dataKey=\"temp\"\n                        fill=\"#009fe3\"\n                        maxBarSize={24}\n                        radius={[4, 4, 0, 0]}\n                    />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    </div>\n);\n\nForecastChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    forecastDate: PropTypes.string.isRequired,\n    isCelsius: PropTypes.bool\n}\n\nForecastChart.defaultProps = {\n    data: [],\n    forecastDate: \"\",\n    isCelsius: false\n}\n\nexport default ForecastChart;\n","import temperatureConverter from \"../../shared/utils/temperatureConverter\";\n\n/**\n * Groups the array list by date\n *\n * @param {Object[]} list - weather info object list\n *\n * @returns {*} - weather info grouped by date as key\n */\n\nexport const groupWeatherByDate = (list) => {\n    return list.reduce((acc, item) => {\n        const date = item.dt_txt.split(\" \", 1);\n        if(acc[date]) {\n            acc[date].push(item);\n        } else {\n            acc[date] = [item];\n        }\n        return acc;\n    }, {});\n}\n\n\n/**\n * Function returns average of temperature for a given day's weather info\n *\n * @param {Object[]} day - weather info for single day\n *\n * @returns {number} average temperature for day\n */\n\nexport const getAverageTemperature = (day) => {\n    const sumTemp = day.reduce((acc, item) => {\n        acc += item.main.temp;\n        return acc;\n    }, 0);\n    return sumTemp/day.length;\n}\n\n\n/**\n * Weather info list for cards\n *\n * @param {object} data - weather info grouped by date\n *\n * @returns {Object[]} - array of objects with date and average temperature\n */\n\nexport const getWeatherList = (data) => {\n    const list = [];\n    for(let day in data) {\n        const info = {\n            date: day,\n            avg_temp: getAverageTemperature(data[day]),\n        }\n        list.push(info);\n    }\n    return list;\n}\n\n\n/**\n * extracts data to render chart\n *\n * @param {Object[]} data - weather info object list\n * @param {boolean} isCelsius\n *\n * @returns {Object[]} - array of objects with time and temperature\n */\n\nexport const getChartData = (data, isCelsius) => {\n    return data.map(item => {\n        return {\n            time: item.dt_txt.substr(item.dt_txt.indexOf(\" \") + 1, 5),\n            temp: temperatureConverter(item.main.temp, isCelsius),\n        }\n    })\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst weatherInitialState = {\n    isLoading: true,\n    error: \"\",\n    cityInfo: {},\n    forecastList: [],\n    forecastByDate: {},\n};\n\nexport const weatherSelector = state => ({\n    error: state.weather.error,\n    isLoading: state.weather.isLoading,\n    cityInfo: state.weather.cityInfo,\n    forecastList: state.weather.forecastList,\n    forecastByDate: state.weather.forecastByDate,\n});\n\nconst weatherSlice = createSlice({\n    name: \"weather\",\n    initialState: weatherInitialState,\n    reducers: {\n        fetchWeatherDataSuccess: (state, action) => {\n            state.isLoading = false;\n            state.cityInfo = action.payload.city;\n            state.forecastList = action.payload.forecastList;\n            state.forecastByDate = action.payload.forecastByDate;\n        },\n        setError: (state, action) => {\n            state.isLoading = false;\n            state.error = action.payload\n        }\n    }\n});\n\nexport const { fetchWeatherDataSuccess, setError } = weatherSlice.actions;\n\nexport default weatherSlice;\n","import axios from \"axios\";\n\n/**\n * Shared request API gateway function\n *\n * @param {string} url\n * @param {Object} params\n *\n * @returns {Promise<AxiosResponse<any>>}\n */\n\nconst request = async (url= \"\", params = {}) => {\n    // more stuff can go here like,\n    // setting auth token, headers etc..\n    // but for now would like to keep just get :)\n    return await axios.get(url, { params });\n}\n\nexport default request;\n","import {weatherSelector} from \"./Weather.slice\";\nimport {useEffect, useState} from \"react\";\nimport {fetchWeatherData} from \"./Weather.apis\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst useWeather = () => {\n    const state = useSelector(weatherSelector);\n    const dispatch = useDispatch();\n    const [isCelsius, setIsCelsius] = useState(false);\n    const [activeForecastDate, setActiveForecastDate] = useState(null);\n\n    useEffect(() => {\n        // intentionally added delay to show loader for 1.3 seconds\n        setTimeout(() => {\n            dispatch(fetchWeatherData());\n        }, 1300)\n    }, []);\n\n    return {\n        state,\n        isCelsius,\n        setIsCelsius,\n        activeForecastDate,\n        setActiveForecastDate\n    }\n}\n\nexport default useWeather;\n","import {getWeatherList, groupWeatherByDate} from \"./Weather.util\";\nimport { fetchWeatherDataSuccess, setError } from \"./Weather.slice\";\nimport request from \"../../shared/utils/request\";\n\nconst WEATHER_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\nconst API_KEY = \"3dcbba7ca4300e233aff5675be8082ab\";\n\nexport const fetchWeatherData = () => async dispatch => {\n    try {\n        const params = {\n            APPID: API_KEY,\n            q: \"Munich,de\",\n            cnt: \"40\",\n            units: \"metric\"\n        }\n        const response = await request(WEATHER_URL, params);\n        const { list, city } = response.data;\n        const forecastByDate = groupWeatherByDate(list);\n        const forecastList = getWeatherList(forecastByDate);\n        dispatch(fetchWeatherDataSuccess({ city, forecastByDate, forecastList }));\n    } catch (error) {\n        dispatch(setError(error.message || \"Unknown error occurred\"));\n    }\n};\n","import React from \"react\";\nimport {Loader, Error} from \"../../shared/components\";\nimport ForecastList from \"./components/ForecastList/ForecastList\";\nimport ForecastChart from \"./components/ForecastChart/ForecastChart\";\nimport {getChartData} from \"./Weather.util\";\nimport useWeather from \"./useWeather\";\n\nconst Weather = () => {\n    const {\n        state,\n        isCelsius,\n        setIsCelsius,\n        activeForecastDate,\n        setActiveForecastDate\n    } = useWeather();\n\n    if (state.error) {\n        return <Error message={state.error} />\n    }\n\n    if (state.isLoading) {\n        return <Loader />\n    }\n\n    return (\n        <React.Fragment>\n            {!!state.forecastList.length && <ForecastList\n                list={state.forecastList}\n                isCelsius={isCelsius}\n                city={state.cityInfo.name}\n                setIsCelsius={() => setIsCelsius(!isCelsius)}\n                activeForecastDate={activeForecastDate}\n                setActiveForecastDate={setActiveForecastDate}\n            />}\n            {activeForecastDate && <ForecastChart\n                forecastDate={activeForecastDate}\n                isCelsius={isCelsius}\n                data={getChartData(state.forecastByDate[activeForecastDate], isCelsius)}\n            />}\n        </React.Fragment>\n    );\n}\n\nWeather.propTypes = {}\n\nWeather.defaultProps = {}\n\nexport default Weather;\n","import {useEffect, useState} from \"react\";\n\nconst useFlashScreen = () => {\n    const [showFlashScreen, setFlashScreen] = useState(true);\n\n    useEffect(() => {\n        // intentionally added delay to show flash screen for a second\n        setTimeout(() => {\n            setFlashScreen(false);\n            document.getElementById(\"flash-screen\").style.display = \"none\";\n        }, 1000)\n    }, []);\n\n    return showFlashScreen;\n}\n\nexport default useFlashScreen;\n","import React from \"react\";\r\nimport Weather from \"./pages/Weather/Weather\";\r\nimport {Header} from \"./shared/components\";\r\nimport styles from \"./pages/Weather/Weather.module.css\";\r\nimport useFlashScreen from \"./useFlashScreen\";\r\n\r\nconst App = () => {\r\n    const showFlashScreen = useFlashScreen();\r\n\r\n    if (showFlashScreen) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className={styles.content}>\r\n                <Weather />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport weatherSlice from \"../pages/Weather/Weather.slice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    weather: weatherSlice.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3dVUz\",\"header__title\":\"Header_header__title__28fUQ\",\"container\":\"Header_container__1hKOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3Ku7_\",\"loader__spinner\":\"Loader_loader__spinner__2TUQn\",\"loading\":\"Loader_loading__2TJ_o\",\"loader__text\":\"Loader_loader__text__1uZ15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Switch_switch__3fe8q\",\"switch__input\":\"Switch_switch__input__291o-\",\"switch__circle\":\"Switch_switch__circle__80GYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ForecastChart_wrapper__UxHGX\",\"title\":\"ForecastChart_title__jWRBQ\",\"chartContainer\":\"ForecastChart_chartContainer__178UJ\"};"],"sourceRoot":""}